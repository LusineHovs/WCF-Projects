//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApi_ClientForWCF.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllFiles", ReplyAction="http://tempuri.org/IService1/GetAllFilesResponse")]
        string[] GetAllFiles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllFiles", ReplyAction="http://tempuri.org/IService1/GetAllFilesResponse")]
        System.Threading.Tasks.Task<string[]> GetAllFilesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetByName", ReplyAction="http://tempuri.org/IService1/GetByNameResponse")]
        string GetByName(string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetByName", ReplyAction="http://tempuri.org/IService1/GetByNameResponse")]
        System.Threading.Tasks.Task<string> GetByNameAsync(string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteFile", ReplyAction="http://tempuri.org/IService1/DeleteFileResponse")]
        void DeleteFile(string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteFile", ReplyAction="http://tempuri.org/IService1/DeleteFileResponse")]
        System.Threading.Tasks.Task DeleteFileAsync(string fileName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WebApi_ClientForWCF.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WebApi_ClientForWCF.ServiceReference1.IService1>, WebApi_ClientForWCF.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] GetAllFiles() {
            return base.Channel.GetAllFiles();
        }
        
        public System.Threading.Tasks.Task<string[]> GetAllFilesAsync() {
            return base.Channel.GetAllFilesAsync();
        }
        
        public string GetByName(string fileName) {
            return base.Channel.GetByName(fileName);
        }
        
        public System.Threading.Tasks.Task<string> GetByNameAsync(string fileName) {
            return base.Channel.GetByNameAsync(fileName);
        }
        
        public void DeleteFile(string fileName) {
            base.Channel.DeleteFile(fileName);
        }
        
        public System.Threading.Tasks.Task DeleteFileAsync(string fileName) {
            return base.Channel.DeleteFileAsync(fileName);
        }
    }
}
